// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render correctly 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 3rem;
  line-height: 1.5rem;
  width: 90%;
  padding: .375rem .75rem;
  box-sizing: border-box;
  color: #FFFFFF;
  background-color: rgba(0,0,0,0);
  border: 1px solid #ffffff;
  border-radius: .25rem;
  cursor: pointer;
  outline: none;
  -webkit-transition: all 0.3s ease 0s;
  transition: all 0.3s ease 0s;
  opacity: 1;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  font-weight: 400;
  text-transform: uppercase !important;
  margin: 0 auto;
  margin-top: 1.5rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 *:not(:last-child) {
  margin-right: 0.4rem;
}

.c0 > :first-child {
  border-top-right-radius: initial;
  border-bottom-right-radius: initial;
}

.c0 > :last-child {
  border-top-left-radius: initial;
  border-bottom-left-radius: initial;
}

.c0 > :not(:first-child):not(:last-child) {
  border-top-right-radius: initial;
  border-bottom-right-radius: initial;
  border-top-left-radius: initial;
  border-bottom-left-radius: initial;
}

<ButtonGroup>
  <styled.div>
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;

  & *:not(:last-child) {
    margin-right: 0.4rem;
  }

  & > :first-child {
    border-top-right-radius: initial;
    border-bottom-right-radius: initial;
  }

  & > :last-child {
    border-top-left-radius: initial;
    border-bottom-left-radius: initial;
  }

  & > :not(:first-child):not(:last-child) {
    border-top-right-radius: initial;
    border-bottom-right-radius: initial;
    border-top-left-radius: initial;
    border-bottom-left-radius: initial;
  }
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Button1>
          <Button
            disabled={false}
            type="button"
            width="90%"
          >
            <styled.button
              disabled={false}
              type="button"
              width="90%"
            >
              <StyledComponent
                disabled={false}
                forwardedClass={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 3rem;
  line-height: 1.5rem;
  width: ",
                        [Function],
                        ";
  padding: .375rem .75rem;
  box-sizing: border-box;
  color: ",
                        [Function],
                        ";
  background-color: ",
                        [Function],
                        ";
  border: 1px solid #ffffff;
  border-radius: .25rem;
  cursor: ",
                        [Function],
                        ";
  outline: none;
  transition: all 0.3s ease 0s;
  opacity: ",
                        [Function],
                        ";
  font-family: ",
                        [Function],
                        ";
  font-size: 1rem;
  font-weight: 400;

  text-transform: uppercase !important;
  margin: 0 auto;
  margin-top: 1.5rem;

  &:hover {
    background-color: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.button",
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                type="button"
                width="90%"
              >
                <button
                  className="c1"
                  disabled={false}
                  type="button"
                  width="90%"
                >
                  Button1
                </button>
              </StyledComponent>
            </styled.button>
          </Button>
        </Button1>
        <Button2>
          <Button
            disabled={false}
            type="button"
            width="90%"
          >
            <styled.button
              disabled={false}
              type="button"
              width="90%"
            >
              <StyledComponent
                disabled={false}
                forwardedClass={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 3rem;
  line-height: 1.5rem;
  width: ",
                        [Function],
                        ";
  padding: .375rem .75rem;
  box-sizing: border-box;
  color: ",
                        [Function],
                        ";
  background-color: ",
                        [Function],
                        ";
  border: 1px solid #ffffff;
  border-radius: .25rem;
  cursor: ",
                        [Function],
                        ";
  outline: none;
  transition: all 0.3s ease 0s;
  opacity: ",
                        [Function],
                        ";
  font-family: ",
                        [Function],
                        ";
  font-size: 1rem;
  font-weight: 400;

  text-transform: uppercase !important;
  margin: 0 auto;
  margin-top: 1.5rem;

  &:hover {
    background-color: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.button",
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                type="button"
                width="90%"
              >
                <button
                  className="c1"
                  disabled={false}
                  type="button"
                  width="90%"
                >
                  Button2
                </button>
              </StyledComponent>
            </styled.button>
          </Button>
        </Button2>
        <Button3>
          <Button
            disabled={false}
            type="button"
            width="90%"
          >
            <styled.button
              disabled={false}
              type="button"
              width="90%"
            >
              <StyledComponent
                disabled={false}
                forwardedClass={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 3rem;
  line-height: 1.5rem;
  width: ",
                        [Function],
                        ";
  padding: .375rem .75rem;
  box-sizing: border-box;
  color: ",
                        [Function],
                        ";
  background-color: ",
                        [Function],
                        ";
  border: 1px solid #ffffff;
  border-radius: .25rem;
  cursor: ",
                        [Function],
                        ";
  outline: none;
  transition: all 0.3s ease 0s;
  opacity: ",
                        [Function],
                        ";
  font-family: ",
                        [Function],
                        ";
  font-size: 1rem;
  font-weight: 400;

  text-transform: uppercase !important;
  margin: 0 auto;
  margin-top: 1.5rem;

  &:hover {
    background-color: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.button",
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                type="button"
                width="90%"
              >
                <button
                  className="c1"
                  disabled={false}
                  type="button"
                  width="90%"
                >
                  Button3
                </button>
              </StyledComponent>
            </styled.button>
          </Button>
        </Button3>
      </div>
    </StyledComponent>
  </styled.div>
</ButtonGroup>
`;
